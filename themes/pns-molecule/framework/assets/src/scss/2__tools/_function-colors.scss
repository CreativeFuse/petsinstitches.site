/**
 * Eventually, weâ€™ll get tired of repeating map-get($color, ...) over and over so you can use a little
 * helper function to ease your pain!
 *
 * @ref http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/
 *
 * @param $color - color in our color sass map in 1__settings
 *
 */

@function color($color, $tone: "base", $escaped: false) {
	@if not map-has-key($colors, $color) {
		@warn "No color found for `#{$color}` and tone `#{$tone}` in $colors map. Property omitted.";

		@return null;
	}

	// Use when interpolating colors in SVGs within CSS
	@if ($escaped == true){

		// Convert color value to a string s we can work with it:
		// https://sass-lang.com/documentation/functions/string
		$raw_color: quote( map-get(map-get($colors, $color), $tone) );

		// Replace the `#` with the escaped value `%23`
		$escaped_color: str-replace( $raw_color, '#', '%23' );

		@return $escaped_color;

	}

	@if ($escaped == false){

		@return map-get(map-get($colors, $color), $tone);

	}

}

// Example Usage
// Assume we need to get a grayscale color at 10% brightness

// .element{
// 		color: color(grayscale, 10);
//
// 		&:hover{
// 			color: color(grayscale, 15);
// 		}
//
// 	}
